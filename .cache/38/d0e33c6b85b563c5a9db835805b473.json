{"id":"node_modules/ol/asserts.js","dependencies":[{"name":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\node_modules\\ol\\asserts.js.map","includedInParent":true,"mtime":1665404340050},{"name":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\node_modules\\ol\\src\\asserts.js","includedInParent":true,"mtime":1665404336418},{"name":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\package.json","includedInParent":true,"mtime":1665407360019},{"name":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\node_modules\\ol\\package.json","includedInParent":true,"mtime":1665404340042},{"name":"./AssertionError.js","loc":{"line":4,"column":27,"index":57},"parent":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\node_modules\\ol\\asserts.js","resolved":"C:\\Users\\armer12\\Documents\\Github\\swissPark\\node_modules\\ol\\AssertionError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = assert;\nvar _AssertionError = _interopRequireDefault(require(\"./AssertionError.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nfunction assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new _AssertionError.default(errorCode);\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/asserts.js","name":null,"original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"src/asserts.js","name":null,"original":{"line":4,"column":49},"generated":{"line":8,"column":0}},{"source":"src/asserts.js","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"src/asserts.js","name":null,"original":{"line":6,"column":0},"generated":{"line":13,"column":0}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":0}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":16},"generated":{"line":17,"column":9}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":22},"generated":{"line":17,"column":15}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":23},"generated":{"line":17,"column":16}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":32},"generated":{"line":17,"column":25}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":34},"generated":{"line":17,"column":27}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":43},"generated":{"line":17,"column":36}},{"source":"src/asserts.js","name":null,"original":{"line":10,"column":43},"generated":{"line":17,"column":38}},{"source":"src/asserts.js","name":null,"original":{"line":11,"column":2},"generated":{"line":18,"column":2}},{"source":"src/asserts.js","name":null,"original":{"line":11,"column":6},"generated":{"line":18,"column":6}},{"source":"src/asserts.js","name":null,"original":{"line":11,"column":7},"generated":{"line":18,"column":7}},{"source":"src/asserts.js","name":null,"original":{"line":11,"column":16},"generated":{"line":18,"column":16}},{"source":"src/asserts.js","name":null,"original":{"line":11,"column":18},"generated":{"line":18,"column":18}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":4},"generated":{"line":19,"column":4}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":10},"generated":{"line":19,"column":10}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":14},"generated":{"line":19,"column":14}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":28},"generated":{"line":19,"column":37}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":29},"generated":{"line":19,"column":38}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":38},"generated":{"line":19,"column":47}},{"source":"src/asserts.js","name":null,"original":{"line":12,"column":39},"generated":{"line":19,"column":48}},{"source":"src/asserts.js","name":null,"original":{"line":14,"column":0},"generated":{"line":21,"column":0}}],"sources":{"src/asserts.js":"/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"7cb7d8bcf4b04c8047329bf25625b3ed","cacheData":{"env":{}}}